//Reference to create firebase firestore
const db = firebase.firestore();

    //Get the ref of html tags by searching tag as querySelector
    const dataList = document.querySelector('#dataList');
    const arrivaldepartureForm = document.querySelector('#arrivaldepartureForm');


    //******************** Select/Get Data ***********************************

  // Get the collection (means DB) & Documents of that
  // collection using get method
  // because this is a asynchronous method so we should not
  // assign into a var, we should use then, menas once the
  // openration of get will over then only do something
  // Fetch data from collection
  // db.collection('ContactFormMessages').get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').orderBy('FirstName').get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').where('Phone', '<', '9822752885').get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').where('Phone', '<=', '9822752885').orderBy("Phone","desc").get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').where('Phone', '>', 1).orderBy("Phone","desc").get().then((snapshot) => {
  //   var count = snapshot.size;
  //   console.log('Collection documents size: ' + count);
  //   if (count <= 0) {
  //     console.log('No document found');
  //   } else {
  //     snapshot.docs.forEach(doc => {
  //       renderContactMsgList(doc);
  //       // console.log (doc.data());
  //     })
  //   }
  // })

  //Realtime database listener
  // db.collection('ContactFormMessages').onSnapshot(snapshot => {
  db.collection('Template_ArrivalDeparture').orderBy('Timestamp').onSnapshot(snapshot => {
    let changes = snapshot.docChanges();
    // console.log(changes);
    changes.forEach (change => {
      // console.log(change.doc.data());
      if (change.type == 'added') {
        renderDataList(change.doc);
      }
      else if (change.type == 'removed') {
        let li = contactMessageList.querySelector('[data-id=' + change.doc.id + ']');
        dataListList.removeChild(li);
      }
    })
  })

  function renderDataList(doc){
    var transitName = doc.data().TransitName;
    var origin = doc.data().Origin;
    var destination = doc.data().Destination;
    var arrival = doc.data().Arrival;
    var departure = doc.data().Departure;
    var gateno = doc.data().GateNo;
    var status = doc.data().Status;
    var statusRemark = doc.data().StatusRemark;

    console.log("Transit Name: " + transitName);
    console.log("Origin: " + origin);
    console.log("Destination: " + destination);
    console.log("Arrival: " + arrival);
    console.log("Departure: " + departure);
    console.log("GateNo: " + gateno);
    console.log("Status: " + status);
    console.log("Status Remark: " + statusRemark);

    let item = document.createElement('div');
    item.classList.add("item");
    item.innerHTML = "<div class='card card-body'>" + transitName + "</div>";
    // document.getElementsByClassName("owl-carousel").appendChild(item);
    // $('#clients-list').trigger('add.owl.carousel', ['<div class="item"><p>' + transitName + '</p></div>'])
    //                 .trigger('refresh.owl.carousel');
    $('#clients-list').trigger('add.owl.carousel', [item])
                    .trigger('refresh.owl.carousel');

  }


// create element and render contact message list
function renderContactMsgList(doc) {
  let li = document.createElement('li');
  let TransitName = document.createElement('span');
  let Origin = document.createElement('span');
  let Destination = document.createElement('span');
  let Arrival = document.createElement('span');
  let cross = document.createElement('div');

  li.setAttribute('data-id', doc.id);

  transitname.textContent = doc.data().TransitName;
  print(doc.data().TransitName);
  origin.textContent = doc.data().Origin;
  destination.textContent = doc.data().Destination;
  arrival.textContent = doc.data().Arrival;
  cross.textContent = 'x';

  li.appendChild(transitname);
  // li.appendChild(origin);
  li.appendChild(destination);
  li.appendChild(arrival);
  li.appendChild(cross);

  contactMessageList.appendChild(li);

  // deleting data from collection database
  //Create event listener as click on cross
  // to fire this
  cross.addEventListener('click', (e) => {
    e.stopPropagation();
    //e.target means cross (x)
    // parentElement means li
    //data-id of li is document autogenerated id of collection database
    let id = e.target.parentElement.getAttribute('data-id');
    db.collection('Template_ArrivalDeparture').doc(id).delete();
  })

}


  //******************** Insert/Save Data ***********************************

// Save form data into collection database
// on addEventListener action
arrivaldepartureForm.addEventListener('submit', (e) => {
  // prevent to refresh page for user
  e.preventDefault();
  storeData();
})

// Save Data into database
function storeData() {
  console.log("data sending to db - started");
  // var fName = document.getElementById("fName").value;
  // var lName = document.getElementById("lName").value;
  // var phone = document.getElementById("phone").value;
  // var email = document.getElementById("email").value;
  // var message = document.getElementById("message").value;

  db.collection("Template_ArrivalDeparture").add({
      TransitName: arrivaldepartureForm.transitname.value,
      Origin: arrivaldepartureForm.origin.value,
      // Phone: parseInt(arrivaldepartureForm.destination.value),
      Destination: arrivaldepartureForm.destination.value,
      Arrival: arrivaldepartureForm.arrival.value,
      Departure: arrivaldepartureForm.departure.value,
      GateNo: arrivaldepartureForm.gateno.value,
      Status: arrivaldepartureForm.status.value,
      StatusRemark: arrivaldepartureForm.statusRemark.value,
      Sender: arrivaldepartureForm.sender.value,
      Timestamp: (new Date()).toString()
    })
    .then((docRef) => {
      console.log("Data added successful");
    })
    .catch((error) => {
      console.error("Error adding document: ", error);
    });

  // Show alert
  document.querySelector('.alert').style.display = 'block';

  // Hide alert after 3 seconds
  setTimeout(function() {
    document.querySelector('.alert').style.display = 'none';
  }, 3000);

  // Clear Form
  document.getElementById('arrivaldepartureForm').reset();

  console.log("data sending to db - completed");

  // db.collection('ContactFormMessages').get().then((snapshot) => {
  //   snapshot.docs.forEach(doc => {
  //       renderContactMsgList(doc);
  //   })
  // })
}


  //******************** Update/Edit Data ***********************************
  // db.collection('ContactFormMessages').doc('lGiFJClqrbDy86K7FIfy').update({
  //   Phone: 88888888
  // })
  //
  // db.collection('ContactFormMessages').doc('lGiFJClqrbDy86K7FIfy').set({
  //   Phone: 88888888
  // })
