// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
var firebaseConfig = {
  apiKey: "AIzaSyCa_pWRLz6kjW6wbm84L0sPS1H4iZwpziI",
  authDomain: "webpicker-786c6.firebaseapp.com",
  // databaseURL: "https://webpicker-786c6-default-rtdb.firebaseio.com",
  databaseURL: "https://webpicker-786c6.firebaseio.com",
  projectId: "webpicker-786c6",
  storageBucket: "webpicker-786c6.appspot.com",
  messagingSenderId: "517324220054",
  appId: "1:517324220054:web:e7e281a20b5e2d7b3a44b7",
  measurementId: "G-GJCEDPVJQL"
};
// Initialize Firebase
firebase.initializeApp(firebaseConfig);
// firebase.analytics();

// Reference messages collection
    //Reference to create firebase realtime db
    // var messageRef = firebase.database().ref('ContactMessages');

    //Reference to create firebase firestore
    const db = firebase.firestore();
    // db.settings({ timestampInSnapshots: true });


    //Get the ref of html tags by searching tag as querySelector
    const contactMessageList = document.querySelector('#contactMessageList');
    const contactForm = document.querySelector('#contactForm');


    //******************** Select/Get Data ***********************************

  // Get the collection (means DB) & Documents of that
  // collection using get method
  // because this is a asynchronous method so we should not
  // assign into a var, we should use then, menas once the
  // openration of get will over then only do something
  // Fetch data from collection
  // db.collection('ContactFormMessages').get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').orderBy('FirstName').get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').where('Phone', '<', '9822752885').get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').where('Phone', '<=', '9822752885').orderBy("Phone","desc").get().then((snapshot) => {
  //   // db.collection('ContactFormMessages').where('Phone', '>', 1).orderBy("Phone","desc").get().then((snapshot) => {
  //   var count = snapshot.size;
  //   console.log('Collection documents size: ' + count);
  //   if (count <= 0) {
  //     console.log('No document found');
  //   } else {
  //     snapshot.docs.forEach(doc => {
  //       renderContactMsgList(doc);
  //       // console.log (doc.data());
  //     })
  //   }
  // })

  //Realtime database listener
  // db.collection('ContactFormMessages').onSnapshot(snapshot => {
  db.collection('ContactFormMessages').orderBy('FirstName').onSnapshot(snapshot => {
    let changes = snapshot.docChanges();
    // console.log(changes);
    changes.forEach (change => {
      // console.log(change.doc.data());
      if (change.type == 'added') {
        renderContactMsgList(change.doc);
      }
      else if (change.type == 'removed') {
        let li = contactMessageList.querySelector('[data-id=' + change.doc.id + ']');
        contactMessageList.removeChild(li);
      }
    })
  })


// create element and render contact message list
function renderContactMsgList(doc) {
  let li = document.createElement('li');
  let name = document.createElement('span');
  let phone = document.createElement('span');
  let email = document.createElement('span');
  let message = document.createElement('span');
  let cross = document.createElement('div');

  li.setAttribute('data-id', doc.id);

  name.textContent = doc.data().FirstName + " " + doc.data().LastName;
  phone.textContent = doc.data().Phone;
  email.textContent = doc.data().EmailID;
  message.textContent = doc.data().Messages;
  cross.textContent = 'x';

  li.appendChild(name);
  li.appendChild(phone);
  li.appendChild(email);
  li.appendChild(message);
  li.appendChild(cross);

  contactMessageList.appendChild(li);

  // deleting data from collection database
  //Create event listener as click on cross
  // to fire this
  cross.addEventListener('click', (e) => {
    e.stopPropagation();
    //e.target means cross (x)
    // parentElement means li
    //data-id of li is document autogenerated id of collection database
    let id = e.target.parentElement.getAttribute('data-id');
    db.collection('ContactFormMessages').doc(id).delete();
  })

}


  //******************** Insert/Save Data ***********************************

// Save form data into collection database
// on addEventListener action
contactForm.addEventListener('submit', (e) => {
  // prevent to refresh page for user
  e.preventDefault();
  storeData();
})

// Save Data into database
function storeData() {
  console.log("data sending to db - started");
  // var fName = document.getElementById("fName").value;
  // var lName = document.getElementById("lName").value;
  // var phone = document.getElementById("phone").value;
  // var email = document.getElementById("email").value;
  // var message = document.getElementById("message").value;

  db.collection("ContactFormMessages").add({
      FirstName: contactForm.fName.value,
      LastName: contactForm.lName.value,
      Phone: parseInt(contactForm.phone.value),
      EmailID: contactForm.email.value,
      Messages: contactForm.message.value
    })
    .then((docRef) => {
      console.log("Data added successful");
    })
    .catch((error) => {
      console.error("Error adding document: ", error);
    });

  // Show alert
  document.querySelector('.alert').style.display = 'block';

  // Hide alert after 3 seconds
  setTimeout(function() {
    document.querySelector('.alert').style.display = 'none';
  }, 3000);

  // Clear Form
  document.getElementById('contactForm').reset();

  console.log("data sending to db - completed");

  // db.collection('ContactFormMessages').get().then((snapshot) => {
  //   snapshot.docs.forEach(doc => {
  //       renderContactMsgList(doc);
  //   })
  // })
}


  //******************** Update/Edit Data ***********************************
  // db.collection('ContactFormMessages').doc('lGiFJClqrbDy86K7FIfy').update({
  //   Phone: 88888888
  // })
  //
  // db.collection('ContactFormMessages').doc('lGiFJClqrbDy86K7FIfy').set({
  //   Phone: 88888888
  // })
